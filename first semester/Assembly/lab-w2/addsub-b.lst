     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0A                          a db 10
    14 00000001 07                          b db 7
    15 00000002 0C                          c db 12
    16 00000003 03                          d db 3
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; (a-b)+(c-b-d)+d=8
    22 00000000 A0[00000000]                    mov AL, [a] ;AX<=a, 
    23 00000005 2A05[01000000]                  sub AL, [b] ;AX<=(a-b) 
    24 0000000B 8A1D[02000000]                  mov BL, [c] ;BX<=c, 
    25 00000011 2A1D[01000000]                  sub BL, [b] ;BX<=c-b, 
    26 00000017 2A1D[03000000]                  sub BL, [d] ;BX<=c-b-d 
    27 0000001D 8A0D[03000000]                  mov CL, [d] 
    28 00000023 00C1                            add CL, AL ;CX=(a-b)+d 
    29 00000025 00D9                            add CL, BL ;CX=(a-b)+(c-b-d)+d
    30                                      
    31                                          ; exit(0)
    32 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
