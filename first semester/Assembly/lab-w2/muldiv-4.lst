     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 02                          a db 2
    14 00000001 FD                          b db -3
    15 00000002 0500                        d dw 5
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; -a*a + 2*(b-1) â€“ d = -4-8-55=-17
    21 00000000 A0[00000000]                   mov AL,[a]
    22 00000005 F6D8                           neg AL,;AL=-a
    23 00000007 8A1D[00000000]                 mov BL,[a];BL=a 
    24 0000000D F6EB                           imul BL;AX=AX*BL =-a*a
    25 0000000F 6689C1                         mov CX,AX;CX=-a*a 
    26 00000012 8A1D[01000000]                 mov BL,[b];BL=b 
    27 00000018 FECB                           dec BL;BL=BL-1=b-1 
    28 0000001A B002                           mov AL,2; AX=2
    29 0000001C F6EB                           imul BL;AX=AL*BL=2*(b-1)
    30 0000001E 6689C2                         mov DX,AX;DX=2*(b-1)
    31 00000021 6601D1                         add CX,DX;CX=CX+DX=-a*a+2*(b-1)
    32 00000024 662B0D[02000000]               sub CX,[d];CX=CX-d=a*a+2*(b-1)-d
    33                                          
    34                                          ; exit(0)
    35 0000002B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 0000002D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
